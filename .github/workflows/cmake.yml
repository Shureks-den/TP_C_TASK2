name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: cppcheck
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Create WD
        working-directory: ${{runner.workspace}}/TP_C_TASK2
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: mkdir build

      - name: Build cmake
        working-directory: ${{runner.workspace}}/TP_C_TASK2/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake .. . --build . --config $BUILD_TYPE

      - name: Build make
        working-directory: ${{runner.workspace}}/TP_C_TASK2/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: make
        
      - name: cppcheck
        uses: deep5050/cppcheck-action@master
        with:
          exclude_check: ./build
          enable : warning,style ,performance,portability,unusedFunction,missingInclude
          inconclusive : disable
      
      - name: check content
        working-directory: ${{runner.workspace}}TP_C_TASK2
        shell: bash
        run: ls

      - name: Test
        working-directory: ${{runner.workspace}}/TP_C_TASK2/build
        shell: bash
        run: ctest

      - name: Memoryleaks
        working-directory: ${{runner.workspace}}/TP_C_TASK2/build
        shell: bash
        run: valgrind ctest



